version: "3.8"

services:
  s3:
    image: quay.io/minio/minio
    container_name: projector-s3
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_REGION: ${MINIO_REGION}
    command: server /data --console-address ":9001"
    ports:
      - ${MINIO_CONSOLE_PORT}:9001
      - 9000:9000
    networks:
      - projector-network
    healthcheck:
      test: ["CMD", "curl", "-I", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: mysql:8.0
    container_name: projector-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - projector-network
    volumes:
      - db-data:/var/lib/mysql

  backend:
    build:
      context: ./backend
      dockerfile: backend.Dockerfile
    networks:
      - projector-network
    depends_on:
      db:
        condition: service_healthy
      s3:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-I", "http://localhost:4000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
    networks:
      - projector-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-I", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx
    container_name: projector-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    networks:
      - projector-network
    depends_on:
      backend:
        condition: service_healthy

volumes:
  minio-data:
  db-data:

networks:
  projector-network:
    name: projector-network
    driver: bridge
